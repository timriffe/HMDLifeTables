List of changes needed in this package

* Output of Lexis triangles for Exposures
* Output of full "user friendly" CSV format that contains everything in period view.  This includes Jan1 and Dec31 Pop and Births
  as well as Deaths and Exposures by Lexis Triangle
* output to database of complete records, tie in to password system  
* move Matlab rounding function to its own place in a utilities.R group   It is used in many different routines and should
  have the same structure and use in each case (correct calls for digits)
* current code uses .Rdata and expects bin files with that suffix.  Change to .RData which is the standard
* Move Lexis triangle exposure code from LT to LexisDB so that LexisDB exposures are correct.  This means adjusting the format of the LexisDB which would be good in any case.  
  
* all LT calcs now begin with truncating information at OPENAGE.  Ideally, full age detail available from the InputDB would be carried through all the calculations, only invoking an OPENAGE setting at the end.  This would involve recoding everything.

12/14/2017:  GBR_NP presents problems of aggregation for V6 in that monthly births have different shapes for the subpopulations.  Solution for now is to treat it as a stand-alone country that is not the aggregation of the pieces.  Thus, it has its own monthly brth series.  I am not sure how the LexisDB is created in this case.  InputDB does not have 'Births' nor 'Deaths' nor 'Popultion' -- these are derived from the LexisDB.  In particular, Births need to come from the LexisDB.  Need to modify the Births routine to pull from LexisDB in this case. FIXED.

        * note in Write_Births that intent was to adopt a better format for LexisDB, i.e. to use a wide format which
          contains the implicit tadj values as well as exposures by Lexis triangle.  
          This is the internal form used throughout the lifetable routines
          


6/2/2017:   See https://stackoverflow.com/questions/20596433/how-to-divide-each-row-of-a-matrix-by-elements-of-a-vector-in-r
            Of the equivalent ways to calculate a swept matrix:
                microbenchmark(times=100L,
			  "1" = t(t(mat) / dev),
			  "2" = mat %*% diag(1/dev),
			  "3" = sweep(mat, 2, dev, "/"),
  			  "5" = mat / rep(dev, each = nrow(mat)),
			  "6" = mat / t(replace(t(mat), TRUE, dev)),
			 "10" = mat/dev[col(mat)])
            the code uses #1 in a few places.  The only understandable code is #2 and #3 but
            #3 (my favorite) is 2x slower than #1 and almost 4x slower than #2, which is the
            fastest of all the methods.   Action: modify code to replace occurrances of #1 with #2.

6/2/2017:   correct Exposures, to align with Dima's spreadsheet example  DONE

5/30/2017:  smoothing using quadratic for pi.hat in ltperBoth_AxN needs replacing so that there is no downturn in percentage female
5/30/2017:  MPVERSION should be of the form N.MM  that is support minor revisions.  Yet code treats as integer. Systematically
            change throughout to allow for this, i.e. no MPVERSION == 5.  This could be floor(MPVERSION)==5
5/30/2017:  modify Exposures calcs and output to do triangles in addition to squares.
5/30/2017:  perform experiment to determine problems with V6 monthly birth estimations, under situation of range of neonatal/perinatal mortality
5/30/2017:  add friendly CSV output and/or sqlite or postgresql.  Refer users to HFD for monthly births

6/27/2016:  The Exposures* routines read monthly birth files with each pass.  There are probably several other
   cases like this where data files are read repeatedly.  Restructure so that InputDB files
   are read only a single time and saved in Rbin   

6/27/2016:  related to above, make sure that data input to a country run occurs a single step, with 
   needed checks.  --> add XYZmonthly.txt  to the read inputDB routine, including head check.
   An error encountered was 'LexisDB' instead of 'LDB' as the last column name in the csv file.

6/27/2016: Dima wishes a tightening of defaults, e.g. when v6 applies, the monthly.txt file is not optional


